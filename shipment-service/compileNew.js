const solc = require('solc');
const fs = require('fs');
const TronWeb = require('tronweb');

// Считываем код контракта из файла
const fullNode = 'https://nile.trongrid.io/';
const solidityNode = 'https://nile.trongrid.io/';
const eventServer = 'https://nile.trongrid.io/';

const privateKey =
    'c20980e62c2d9b4cbc6b87239d0fa7281e02928bbc50a2e8b6eea12bbdbdd93e'; //MAINNET

//     'df559c6a9038784badb22b3831b36c02cf36ded1bec5c500f0276377eb6de428'; //TEST TLCA
// '1145ee59bf530e6ca45757c55b36c14014bc7e17b521afd4182d89b983880afb'; //TEST что-то надо проверить что

const tronWeb = new TronWeb(fullNode, solidityNode, eventServer, privateKey);

// Получение ABI и байт-кода
const abi = [
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "productId",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "string",
				"name": "name",
				"type": "string"
			},
			{
				"indexed": false,
				"internalType": "address",
				"name": "owner",
				"type": "address"
			}
		],
		"name": "ProductRegistered",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "productId",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "string",
				"name": "status",
				"type": "string"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "timestamp",
				"type": "uint256"
			}
		],
		"name": "StatusUpdated",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "transactionId",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "address",
				"name": "sender",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "address",
				"name": "recipient",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "timestamp",
				"type": "uint256"
			}
		],
		"name": "TransactionProcessed",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "productId",
				"type": "uint256"
			}
		],
		"name": "getProduct",
		"outputs": [
			{
				"components": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256[]",
						"name": "statusTimestamps",
						"type": "uint256[]"
					},
					{
						"internalType": "string[]",
						"name": "statusHistory",
						"type": "string[]"
					},
					{
						"internalType": "uint256[]",
						"name": "transactionIds",
						"type": "uint256[]"
					}
				],
				"internalType": "struct SupplyChain.Product",
				"name": "",
				"type": "tuple"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "transactionId",
				"type": "uint256"
			}
		],
		"name": "getTransaction",
		"outputs": [
			{
				"components": [
					{
						"internalType": "uint256",
						"name": "transactionId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "timestamp",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "status",
						"type": "string"
					}
				],
				"internalType": "struct SupplyChain.Transaction",
				"name": "",
				"type": "tuple"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "productId",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "recipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			}
		],
		"name": "processPayment",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "products",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "id",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "name",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "description",
				"type": "string"
			},
			{
				"internalType": "address",
				"name": "owner",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "productId",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "name",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "description",
				"type": "string"
			}
		],
		"name": "registerProduct",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"name": "transactions",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "transactionId",
				"type": "uint256"
			},
			{
				"internalType": "address",
				"name": "sender",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "recipient",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "timestamp",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "status",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "productId",
				"type": "uint256"
			},
			{
				"internalType": "string",
				"name": "status",
				"type": "string"
			}
		],
		"name": "updateStatus",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	}
];
const bytecode = "";

async function deploy_contract() {
    try {
        //то что задано в конструкторе смартконтракта
        const options = {
            //порог колва тркс которые готова заплатить за деплой смартконтракта
            feeLimit: 1_500_000_000,
            callValue: 0,
            abi: abi,
            bytecode: bytecode,

        };
        const transaction = await tronWeb.transactionBuilder.createSmartContract(
            options,
            tronWeb.defaultAddress.base58
        );

        const signedTransaction = await tronWeb.trx.sign(transaction, privateKey);

        const receipt = await tronWeb.trx.sendRawTransaction(signedTransaction);

        console.log('Contract deployment transaction:', receipt);

        if (receipt.result) {
            console.log('Contract deployed successfully!');
            const contractAddress = receipt.transaction.contract_address;
            console.log('Contract address:', contractAddress);

            const contractInstance = await tronWeb.contract(abi, contractAddress);

            // const walletB = 'АДРЕС_КОШЕЛЬКА_Б'
            // const amountToSend = 100_000_000;
            //
            // await distributeTokens(contractInstance, walletB, amountToSend);
            //
            // await withdrawTRX(contractInstance);
        } else {
            console.log('Contract deployment failed.');
        }
    } catch (error) {
        console.error('Error deploying contract:', error);
    }
}
deploy_contract();

console.log('ABI и байт-код успешно скомпилированы.');
